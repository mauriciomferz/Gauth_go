apiVersion: v1
kind: ConfigMap
metadata:
  name: gauth-config
  namespace: gauth
data:
  environment: production
  auth.yaml: |
    security:
      # TLS configuration
      tls:
        enabled: true
        min_version: "1.2"
        preferred_cipher_suites:
          - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        
      # CORS configuration
      cors:
        allowed_origins:
          - https://*.example.com
        allowed_methods:
          - GET
          - POST
        allowed_headers:
          - Authorization
          - Content-Type
        max_age: 3600
        
      # Rate limiting
      rate_limit:
        enabled: true
        requests_per_second: 100
        burst: 200
        
      # IP filtering
      ip_filter:
        enabled: true
        allowed_ips:
          - 10.0.0.0/8
          - 172.16.0.0/12
          - 192.168.0.0/16
        
      # Authentication settings
      auth:
        token_expiry: 3600
        refresh_token_expiry: 86400
        password_policy:
          min_length: 12
          require_uppercase: true
          require_lowercase: true
          require_numbers: true
          require_special: true
        brute_force_protection:
          max_attempts: 5
          lockout_duration: 900
        
      # Audit logging
      audit:
        enabled: true
        log_level: INFO
        include_request_body: false
        exclude_paths:
          - /health
          - /metrics
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gauth-network-policy
  namespace: gauth
spec:
  podSelector:
    matchLabels:
      app: gauth
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
---
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: gauth-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'secret'
    - 'emptyDir'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true