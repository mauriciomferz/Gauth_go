apiVersion: apps/v1
kind: Deployment
metadata:
  name: gauth
  namespace: gauth
spec:
  replicas: 3
  selector:
    matchLabels:
      app: gauth
  template:
    metadata:
      labels:
        app: gauth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: gauth
        image: gauth:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
        env:
        - name: GAUTH_ENV
          valueFrom:
            configMapKeyRef:
              name: gauth-config
              key: environment
        - name: GAUTH_CONFIG_PATH
          value: "/app/config"
        volumeMounts:
        - name: config
          mountPath: "/app/config"
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: gauth-config
---
apiVersion: v1
kind: Service
metadata:
  name: gauth
  namespace: gauth
spec:
  selector:
    app: gauth
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gauth
  namespace: gauth
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: auth.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gauth
            port:
              name: http
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gauth
  namespace: gauth
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gauth
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80